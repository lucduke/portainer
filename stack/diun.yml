version: "3.8"

services:

  diun:
    container_name: diun
    image: crazymax/diun:latest
    labels:
      - deunhealth.restart.on.unhealthy=true
      - diun.enable=true
      - com.centurylinklabs.watchtower.enable=true
    command: serve
    environment:
      - TZ=Europe/Paris
      - LOG_LEVEL=info
      - LOG_JSON=false
      - DIUN_WATCH_WORKERS=${watchWorkersNumber}
      - DIUN_WATCH_SCHEDULE=${watchSchedule}
      - DIUN_PROVIDERS_DOCKER=true
      - DIUN_REGOPTS_0_NAME=${registryName}
      - DIUN_REGOPTS_0_SELECTOR=${registrySelector}
      - DIUN_REGOPTS_0_USERNAME=${registryUsername}
      - DIUN_REGOPTS_0_PASSWORD=${registryPassword}
      - DIUN_NOTIF_GOTIFY_ENDPOINT=${gotifyUrl}
      - DIUN_NOTIF_GOTIFY_TOKEN=${gotifyToken}
      - DIUN_NOTIF_GOTIFY_TEMPLATETITLE="{{ .Entry.Image }} {{ if (eq .Entry.Status "new") }}is available{{ else }}has been updated{{ end }}"
      - DIUN_NOTIF_GOTIFY_TEMPLATEBODY="Docker tag {{ if .Entry.Image.HubLink }}[**{{ .Entry.Image }}**]({{ .Entry.Image.HubLink }}){{ else }}**{{ .Entry.Image }}**{{ end }} which you subscribed to through {{ .Entry.Provider }} provider {{ if (eq .Entry.Status "new") }}is available{{ else }}has been updated{{ end }} on {{ .Entry.Image.Domain }} registry (triggered by {{ .Meta.Hostname }} host)."
    volumes:
      - nfs_data:/data
      - nfs_etc:/etc/diun
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - frontend

volumes:
  nfs_data:
    driver: local
    driver_opts:
      type: nfs
      o: addr=${address},rw,soft,nfsvers=4
      device: ${path_nfs_data}
  nfs_etc:
    driver: local
    driver_opts:
      type: nfs
      o: addr=${address},rw,soft,nfsvers=4
      device: ${path_nfs_etc}

networks:
  frontend:
    external: true